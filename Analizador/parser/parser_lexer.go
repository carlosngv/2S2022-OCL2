// Code generated from ParserLexer.g4 by ANTLR 4.9. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 51, 312,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37, 9, 37, 4, 38, 9, 38, 4,
	39, 9, 39, 4, 40, 9, 40, 4, 41, 9, 41, 4, 42, 9, 42, 4, 43, 9, 43, 4, 44,
	9, 44, 4, 45, 9, 45, 4, 46, 9, 46, 4, 47, 9, 47, 4, 48, 9, 48, 4, 49, 9,
	49, 4, 50, 9, 50, 4, 51, 9, 51, 3, 2, 3, 2, 3, 3, 3, 3, 3, 4, 3, 4, 3,
	5, 3, 5, 3, 6, 3, 6, 3, 7, 3, 7, 3, 8, 3, 8, 3, 8, 3, 8, 3, 8, 3, 8, 3,
	8, 3, 8, 3, 8, 3, 9, 3, 9, 3, 9, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3,
	11, 3, 11, 3, 11, 3, 11, 3, 12, 3, 12, 3, 12, 3, 12, 3, 13, 3, 13, 3, 13,
	3, 13, 3, 13, 3, 13, 3, 14, 3, 14, 3, 14, 3, 14, 3, 15, 3, 15, 3, 15, 3,
	15, 3, 15, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 17,
	3, 17, 3, 17, 3, 17, 3, 17, 3, 17, 3, 17, 3, 18, 3, 18, 3, 18, 3, 18, 3,
	18, 3, 18, 3, 18, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 20,
	3, 20, 3, 20, 3, 20, 3, 21, 3, 21, 3, 21, 3, 21, 3, 22, 3, 22, 3, 22, 3,
	22, 3, 22, 3, 22, 3, 22, 3, 23, 3, 23, 3, 23, 3, 23, 3, 23, 3, 24, 3, 24,
	3, 24, 3, 24, 3, 24, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3,
	25, 3, 26, 3, 26, 3, 27, 3, 27, 3, 28, 3, 28, 3, 29, 3, 29, 3, 30, 3, 30,
	3, 30, 3, 31, 3, 31, 3, 31, 3, 32, 3, 32, 3, 33, 3, 33, 3, 34, 3, 34, 3,
	34, 3, 35, 3, 35, 3, 35, 3, 36, 3, 36, 3, 36, 3, 37, 3, 37, 3, 37, 3, 38,
	3, 38, 3, 39, 3, 39, 3, 40, 3, 40, 3, 41, 3, 41, 3, 42, 3, 42, 3, 43, 3,
	43, 3, 44, 6, 44, 261, 10, 44, 13, 44, 14, 44, 262, 3, 45, 6, 45, 266,
	10, 45, 13, 45, 14, 45, 267, 3, 45, 3, 45, 6, 45, 272, 10, 45, 13, 45,
	14, 45, 273, 3, 46, 3, 46, 7, 46, 278, 10, 46, 12, 46, 14, 46, 281, 11,
	46, 3, 46, 3, 46, 3, 47, 3, 47, 3, 47, 3, 47, 3, 47, 3, 48, 3, 48, 3, 48,
	3, 48, 3, 48, 3, 48, 3, 49, 3, 49, 7, 49, 298, 10, 49, 12, 49, 14, 49,
	301, 11, 49, 3, 50, 6, 50, 304, 10, 50, 13, 50, 14, 50, 305, 3, 50, 3,
	50, 3, 51, 3, 51, 3, 51, 2, 2, 52, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8,
	15, 9, 17, 10, 19, 11, 21, 12, 23, 13, 25, 14, 27, 15, 29, 16, 31, 17,
	33, 18, 35, 19, 37, 20, 39, 21, 41, 22, 43, 23, 45, 24, 47, 25, 49, 26,
	51, 27, 53, 28, 55, 29, 57, 30, 59, 31, 61, 32, 63, 33, 65, 34, 67, 35,
	69, 36, 71, 37, 73, 38, 75, 39, 77, 40, 79, 41, 81, 42, 83, 43, 85, 44,
	87, 45, 89, 46, 91, 47, 93, 48, 95, 49, 97, 50, 99, 51, 101, 2, 3, 2, 9,
	3, 2, 50, 59, 3, 2, 48, 48, 3, 2, 36, 36, 5, 2, 67, 92, 97, 97, 99, 124,
	6, 2, 50, 59, 67, 92, 97, 97, 99, 124, 5, 2, 11, 12, 15, 15, 34, 34, 9,
	2, 34, 35, 37, 37, 45, 45, 47, 48, 60, 60, 66, 66, 93, 95, 2, 316, 2, 3,
	3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11,
	3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2,
	19, 3, 2, 2, 2, 2, 21, 3, 2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2,
	2, 27, 3, 2, 2, 2, 2, 29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2,
	2, 2, 35, 3, 2, 2, 2, 2, 37, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2,
	2, 2, 2, 43, 3, 2, 2, 2, 2, 45, 3, 2, 2, 2, 2, 47, 3, 2, 2, 2, 2, 49, 3,
	2, 2, 2, 2, 51, 3, 2, 2, 2, 2, 53, 3, 2, 2, 2, 2, 55, 3, 2, 2, 2, 2, 57,
	3, 2, 2, 2, 2, 59, 3, 2, 2, 2, 2, 61, 3, 2, 2, 2, 2, 63, 3, 2, 2, 2, 2,
	65, 3, 2, 2, 2, 2, 67, 3, 2, 2, 2, 2, 69, 3, 2, 2, 2, 2, 71, 3, 2, 2, 2,
	2, 73, 3, 2, 2, 2, 2, 75, 3, 2, 2, 2, 2, 77, 3, 2, 2, 2, 2, 79, 3, 2, 2,
	2, 2, 81, 3, 2, 2, 2, 2, 83, 3, 2, 2, 2, 2, 85, 3, 2, 2, 2, 2, 87, 3, 2,
	2, 2, 2, 89, 3, 2, 2, 2, 2, 91, 3, 2, 2, 2, 2, 93, 3, 2, 2, 2, 2, 95, 3,
	2, 2, 2, 2, 97, 3, 2, 2, 2, 2, 99, 3, 2, 2, 2, 3, 103, 3, 2, 2, 2, 5, 105,
	3, 2, 2, 2, 7, 107, 3, 2, 2, 2, 9, 109, 3, 2, 2, 2, 11, 111, 3, 2, 2, 2,
	13, 113, 3, 2, 2, 2, 15, 115, 3, 2, 2, 2, 17, 124, 3, 2, 2, 2, 19, 127,
	3, 2, 2, 2, 21, 132, 3, 2, 2, 2, 23, 136, 3, 2, 2, 2, 25, 140, 3, 2, 2,
	2, 27, 146, 3, 2, 2, 2, 29, 150, 3, 2, 2, 2, 31, 155, 3, 2, 2, 2, 33, 163,
	3, 2, 2, 2, 35, 170, 3, 2, 2, 2, 37, 177, 3, 2, 2, 2, 39, 184, 3, 2, 2,
	2, 41, 188, 3, 2, 2, 2, 43, 192, 3, 2, 2, 2, 45, 199, 3, 2, 2, 2, 47, 204,
	3, 2, 2, 2, 49, 209, 3, 2, 2, 2, 51, 217, 3, 2, 2, 2, 53, 219, 3, 2, 2,
	2, 55, 221, 3, 2, 2, 2, 57, 223, 3, 2, 2, 2, 59, 225, 3, 2, 2, 2, 61, 228,
	3, 2, 2, 2, 63, 231, 3, 2, 2, 2, 65, 233, 3, 2, 2, 2, 67, 235, 3, 2, 2,
	2, 69, 238, 3, 2, 2, 2, 71, 241, 3, 2, 2, 2, 73, 244, 3, 2, 2, 2, 75, 247,
	3, 2, 2, 2, 77, 249, 3, 2, 2, 2, 79, 251, 3, 2, 2, 2, 81, 253, 3, 2, 2,
	2, 83, 255, 3, 2, 2, 2, 85, 257, 3, 2, 2, 2, 87, 260, 3, 2, 2, 2, 89, 265,
	3, 2, 2, 2, 91, 275, 3, 2, 2, 2, 93, 284, 3, 2, 2, 2, 95, 289, 3, 2, 2,
	2, 97, 295, 3, 2, 2, 2, 99, 303, 3, 2, 2, 2, 101, 309, 3, 2, 2, 2, 103,
	104, 7, 42, 2, 2, 104, 4, 3, 2, 2, 2, 105, 106, 7, 43, 2, 2, 106, 6, 3,
	2, 2, 2, 107, 108, 7, 125, 2, 2, 108, 8, 3, 2, 2, 2, 109, 110, 7, 127,
	2, 2, 110, 10, 3, 2, 2, 2, 111, 112, 7, 93, 2, 2, 112, 12, 3, 2, 2, 2,
	113, 114, 7, 95, 2, 2, 114, 14, 3, 2, 2, 2, 115, 116, 7, 114, 2, 2, 116,
	117, 7, 116, 2, 2, 117, 118, 7, 107, 2, 2, 118, 119, 7, 112, 2, 2, 119,
	120, 7, 118, 2, 2, 120, 121, 7, 110, 2, 2, 121, 122, 7, 112, 2, 2, 122,
	123, 7, 35, 2, 2, 123, 16, 3, 2, 2, 2, 124, 125, 7, 107, 2, 2, 125, 126,
	7, 104, 2, 2, 126, 18, 3, 2, 2, 2, 127, 128, 7, 103, 2, 2, 128, 129, 7,
	110, 2, 2, 129, 130, 7, 117, 2, 2, 130, 131, 7, 103, 2, 2, 131, 20, 3,
	2, 2, 2, 132, 133, 7, 111, 2, 2, 133, 134, 7, 119, 2, 2, 134, 135, 7, 118,
	2, 2, 135, 22, 3, 2, 2, 2, 136, 137, 7, 110, 2, 2, 137, 138, 7, 103, 2,
	2, 138, 139, 7, 118, 2, 2, 139, 24, 3, 2, 2, 2, 140, 141, 7, 101, 2, 2,
	141, 142, 7, 110, 2, 2, 142, 143, 7, 99, 2, 2, 143, 144, 7, 117, 2, 2,
	144, 145, 7, 117, 2, 2, 145, 26, 3, 2, 2, 2, 146, 147, 7, 112, 2, 2, 147,
	148, 7, 103, 2, 2, 148, 149, 7, 121, 2, 2, 149, 28, 3, 2, 2, 2, 150, 151,
	7, 111, 2, 2, 151, 152, 7, 99, 2, 2, 152, 153, 7, 107, 2, 2, 153, 154,
	7, 112, 2, 2, 154, 30, 3, 2, 2, 2, 155, 156, 7, 114, 2, 2, 156, 157, 7,
	116, 2, 2, 157, 158, 7, 107, 2, 2, 158, 159, 7, 120, 2, 2, 159, 160, 7,
	99, 2, 2, 160, 161, 7, 118, 2, 2, 161, 162, 7, 103, 2, 2, 162, 32, 3, 2,
	2, 2, 163, 164, 7, 114, 2, 2, 164, 165, 7, 119, 2, 2, 165, 166, 7, 100,
	2, 2, 166, 167, 7, 110, 2, 2, 167, 168, 7, 107, 2, 2, 168, 169, 7, 101,
	2, 2, 169, 34, 3, 2, 2, 2, 170, 171, 7, 117, 2, 2, 171, 172, 7, 118, 2,
	2, 172, 173, 7, 99, 2, 2, 173, 174, 7, 118, 2, 2, 174, 175, 7, 107, 2,
	2, 175, 176, 7, 101, 2, 2, 176, 36, 3, 2, 2, 2, 177, 178, 7, 116, 2, 2,
	178, 179, 7, 103, 2, 2, 179, 180, 7, 118, 2, 2, 180, 181, 7, 119, 2, 2,
	181, 182, 7, 116, 2, 2, 182, 183, 7, 112, 2, 2, 183, 38, 3, 2, 2, 2, 184,
	185, 7, 107, 2, 2, 185, 186, 7, 56, 2, 2, 186, 187, 7, 54, 2, 2, 187, 40,
	3, 2, 2, 2, 188, 189, 7, 104, 2, 2, 189, 190, 7, 56, 2, 2, 190, 191, 7,
	54, 2, 2, 191, 42, 3, 2, 2, 2, 192, 193, 7, 85, 2, 2, 193, 194, 7, 118,
	2, 2, 194, 195, 7, 116, 2, 2, 195, 196, 7, 107, 2, 2, 196, 197, 7, 112,
	2, 2, 197, 198, 7, 105, 2, 2, 198, 44, 3, 2, 2, 2, 199, 200, 7, 40, 2,
	2, 200, 201, 7, 117, 2, 2, 201, 202, 7, 118, 2, 2, 202, 203, 7, 116, 2,
	2, 203, 46, 3, 2, 2, 2, 204, 205, 7, 120, 2, 2, 205, 206, 7, 113, 2, 2,
	206, 207, 7, 107, 2, 2, 207, 208, 7, 102, 2, 2, 208, 48, 3, 2, 2, 2, 209,
	210, 7, 100, 2, 2, 210, 211, 7, 113, 2, 2, 211, 212, 7, 113, 2, 2, 212,
	213, 7, 110, 2, 2, 213, 214, 7, 103, 2, 2, 214, 215, 7, 99, 2, 2, 215,
	216, 7, 112, 2, 2, 216, 50, 3, 2, 2, 2, 217, 218, 7, 48, 2, 2, 218, 52,
	3, 2, 2, 2, 219, 220, 7, 46, 2, 2, 220, 54, 3, 2, 2, 2, 221, 222, 7, 61,
	2, 2, 222, 56, 3, 2, 2, 2, 223, 224, 7, 60, 2, 2, 224, 58, 3, 2, 2, 2,
	225, 226, 7, 40, 2, 2, 226, 227, 7, 40, 2, 2, 227, 60, 3, 2, 2, 2, 228,
	229, 7, 126, 2, 2, 229, 230, 7, 126, 2, 2, 230, 62, 3, 2, 2, 2, 231, 232,
	7, 35, 2, 2, 232, 64, 3, 2, 2, 2, 233, 234, 7, 63, 2, 2, 234, 66, 3, 2,
	2, 2, 235, 236, 7, 63, 2, 2, 236, 237, 7, 63, 2, 2, 237, 68, 3, 2, 2, 2,
	238, 239, 7, 35, 2, 2, 239, 240, 7, 63, 2, 2, 240, 70, 3, 2, 2, 2, 241,
	242, 7, 64, 2, 2, 242, 243, 7, 63, 2, 2, 243, 72, 3, 2, 2, 2, 244, 245,
	7, 62, 2, 2, 245, 246, 7, 63, 2, 2, 246, 74, 3, 2, 2, 2, 247, 248, 7, 64,
	2, 2, 248, 76, 3, 2, 2, 2, 249, 250, 7, 62, 2, 2, 250, 78, 3, 2, 2, 2,
	251, 252, 7, 44, 2, 2, 252, 80, 3, 2, 2, 2, 253, 254, 7, 49, 2, 2, 254,
	82, 3, 2, 2, 2, 255, 256, 7, 45, 2, 2, 256, 84, 3, 2, 2, 2, 257, 258, 7,
	47, 2, 2, 258, 86, 3, 2, 2, 2, 259, 261, 9, 2, 2, 2, 260, 259, 3, 2, 2,
	2, 261, 262, 3, 2, 2, 2, 262, 260, 3, 2, 2, 2, 262, 263, 3, 2, 2, 2, 263,
	88, 3, 2, 2, 2, 264, 266, 9, 2, 2, 2, 265, 264, 3, 2, 2, 2, 266, 267, 3,
	2, 2, 2, 267, 265, 3, 2, 2, 2, 267, 268, 3, 2, 2, 2, 268, 269, 3, 2, 2,
	2, 269, 271, 9, 3, 2, 2, 270, 272, 9, 2, 2, 2, 271, 270, 3, 2, 2, 2, 272,
	273, 3, 2, 2, 2, 273, 271, 3, 2, 2, 2, 273, 274, 3, 2, 2, 2, 274, 90, 3,
	2, 2, 2, 275, 279, 7, 36, 2, 2, 276, 278, 10, 4, 2, 2, 277, 276, 3, 2,
	2, 2, 278, 281, 3, 2, 2, 2, 279, 277, 3, 2, 2, 2, 279, 280, 3, 2, 2, 2,
	280, 282, 3, 2, 2, 2, 281, 279, 3, 2, 2, 2, 282, 283, 7, 36, 2, 2, 283,
	92, 3, 2, 2, 2, 284, 285, 7, 118, 2, 2, 285, 286, 7, 116, 2, 2, 286, 287,
	7, 119, 2, 2, 287, 288, 7, 103, 2, 2, 288, 94, 3, 2, 2, 2, 289, 290, 7,
	104, 2, 2, 290, 291, 7, 99, 2, 2, 291, 292, 7, 110, 2, 2, 292, 293, 7,
	117, 2, 2, 293, 294, 7, 103, 2, 2, 294, 96, 3, 2, 2, 2, 295, 299, 9, 5,
	2, 2, 296, 298, 9, 6, 2, 2, 297, 296, 3, 2, 2, 2, 298, 301, 3, 2, 2, 2,
	299, 297, 3, 2, 2, 2, 299, 300, 3, 2, 2, 2, 300, 98, 3, 2, 2, 2, 301, 299,
	3, 2, 2, 2, 302, 304, 9, 7, 2, 2, 303, 302, 3, 2, 2, 2, 304, 305, 3, 2,
	2, 2, 305, 303, 3, 2, 2, 2, 305, 306, 3, 2, 2, 2, 306, 307, 3, 2, 2, 2,
	307, 308, 8, 50, 2, 2, 308, 100, 3, 2, 2, 2, 309, 310, 7, 94, 2, 2, 310,
	311, 9, 8, 2, 2, 311, 102, 3, 2, 2, 2, 9, 2, 262, 267, 273, 279, 299, 305,
	3, 8, 2, 2,
}

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'('", "')'", "'{'", "'}'", "'['", "']'", "'println!'", "'if'", "'else'",
	"'mut'", "'let'", "'class'", "'new'", "'main'", "'private'", "'public'",
	"'static'", "'return'", "'i64'", "'f64'", "'String'", "'&str'", "'void'",
	"'boolean'", "'.'", "','", "';'", "':'", "'&&'", "'||'", "'!'", "'='",
	"'=='", "'!='", "'>='", "'<='", "'>'", "'<'", "'*'", "'/'", "'+'", "'-'",
	"", "", "", "'true'", "'false'",
}

var lexerSymbolicNames = []string{
	"", "LP", "RP", "L_LLAVE", "R_LLAVE", "L_CORCH", "R_CORCH", "PRINTLN",
	"IF_TOK", "ELSE", "MUT", "LET", "CLASS", "NEW_", "MAIN", "PRIVATE", "PUBLIC",
	"STATIC", "RETURN_P", "INTTYPE", "FLOATTYPE", "STRINGTYPE", "STRTYPE",
	"VOIDTYPE", "BOOLTYPE", "PUNTO", "COMA", "PTCOMA", "DOSPUNTOS", "AND",
	"OR", "NOT", "IGUAL", "IGUAL_IGUAL", "DIFERENTE", "MAYORIGUAL", "MENORIGUAL",
	"MAYOR", "MENOR", "MUL", "DIV", "ADD", "SUB", "NUMBER", "FLOAT", "STRING",
	"TRUE", "FALSE", "ID", "WHITESPACE",
}

var lexerRuleNames = []string{
	"LP", "RP", "L_LLAVE", "R_LLAVE", "L_CORCH", "R_CORCH", "PRINTLN", "IF_TOK",
	"ELSE", "MUT", "LET", "CLASS", "NEW_", "MAIN", "PRIVATE", "PUBLIC", "STATIC",
	"RETURN_P", "INTTYPE", "FLOATTYPE", "STRINGTYPE", "STRTYPE", "VOIDTYPE",
	"BOOLTYPE", "PUNTO", "COMA", "PTCOMA", "DOSPUNTOS", "AND", "OR", "NOT",
	"IGUAL", "IGUAL_IGUAL", "DIFERENTE", "MAYORIGUAL", "MENORIGUAL", "MAYOR",
	"MENOR", "MUL", "DIV", "ADD", "SUB", "NUMBER", "FLOAT", "STRING", "TRUE",
	"FALSE", "ID", "WHITESPACE", "ESC_SEQ",
}

type ParserLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

// NewParserLexer produces a new lexer instance for the optional input antlr.CharStream.
//
// The *ParserLexer instance produced may be reused by calling the SetInputStream method.
// The initial lexer configuration is expensive to construct, and the object is not thread-safe;
// however, if used within a Golang sync.Pool, the construction cost amortizes well and the
// objects can be used in a thread-safe manner.
func NewParserLexer(input antlr.CharStream) *ParserLexer {
	l := new(ParserLexer)
	lexerDeserializer := antlr.NewATNDeserializer(nil)
	lexerAtn := lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)
	lexerDecisionToDFA := make([]*antlr.DFA, len(lexerAtn.DecisionToState))
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "ParserLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// ParserLexer tokens.
const (
	ParserLexerLP          = 1
	ParserLexerRP          = 2
	ParserLexerL_LLAVE     = 3
	ParserLexerR_LLAVE     = 4
	ParserLexerL_CORCH     = 5
	ParserLexerR_CORCH     = 6
	ParserLexerPRINTLN     = 7
	ParserLexerIF_TOK      = 8
	ParserLexerELSE        = 9
	ParserLexerMUT         = 10
	ParserLexerLET         = 11
	ParserLexerCLASS       = 12
	ParserLexerNEW_        = 13
	ParserLexerMAIN        = 14
	ParserLexerPRIVATE     = 15
	ParserLexerPUBLIC      = 16
	ParserLexerSTATIC      = 17
	ParserLexerRETURN_P    = 18
	ParserLexerINTTYPE     = 19
	ParserLexerFLOATTYPE   = 20
	ParserLexerSTRINGTYPE  = 21
	ParserLexerSTRTYPE     = 22
	ParserLexerVOIDTYPE    = 23
	ParserLexerBOOLTYPE    = 24
	ParserLexerPUNTO       = 25
	ParserLexerCOMA        = 26
	ParserLexerPTCOMA      = 27
	ParserLexerDOSPUNTOS   = 28
	ParserLexerAND         = 29
	ParserLexerOR          = 30
	ParserLexerNOT         = 31
	ParserLexerIGUAL       = 32
	ParserLexerIGUAL_IGUAL = 33
	ParserLexerDIFERENTE   = 34
	ParserLexerMAYORIGUAL  = 35
	ParserLexerMENORIGUAL  = 36
	ParserLexerMAYOR       = 37
	ParserLexerMENOR       = 38
	ParserLexerMUL         = 39
	ParserLexerDIV         = 40
	ParserLexerADD         = 41
	ParserLexerSUB         = 42
	ParserLexerNUMBER      = 43
	ParserLexerFLOAT       = 44
	ParserLexerSTRING      = 45
	ParserLexerTRUE        = 46
	ParserLexerFALSE       = 47
	ParserLexerID          = 48
	ParserLexerWHITESPACE  = 49
)
